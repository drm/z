ci:
    lint:       true
    phploc:     true
    pdepend:    true
    phpmd:      true
    phpcs:      true
    phpcd:      true
    phpdox:
        enabled:    true
        file:       ""
    phpcb:      true
    phpunit:
        enabled: true
        opts:   []

tasks:
    ci.build:
        help:   "Does a build for continuous integration"
        pre:    [ @ci.prepare ]
        do:     [ @ci.lint, @ci.pdepend, @ci.phpmd, @ci.phpcs, @ci.phploc, @ci.phpdox, @ci.phpunit, @ci.phpcb ]

    ci.clean:
        help:   "Clean up the build dirs"
        do:     rm -rf$(verbose ? "v") build/{api,code-browser,coverage,logs,pdepend}

    ci.prepare:
        help:   "Prepare the build dirs"
        pre:    @ci.clean
        do:     mkdir -p$(verbose ? "v") build/{api,code-browser,coverage,logs,pdepend}

    ci.lint:
        unless: !ci.lint.enabled
        help:   "Lints all PHP files"
        do:     find ./{src,tests} -type f -name "*php" -exec php -l '{}' \;

    ci.phploc:
        unless: !ci.phploc.enabled
        help:   "Runs phploc code metrics tool"
        do:     phploc --log-csv build/logs/phploc.csv src

    ci.pdepend:
        unless: !ci.pdepend.enabled
        help:   "Runs the pdepend code metrics tool"
        do: |
            pdepend                                                     \
                --jdepend-xml=build/logs/jdepend.xml                    \
                --jdepend-chart=build/pdepend/dependencies.svg          \
                --overview-pyramid=build/pdepend/overview-pyramid.svg   \
                src

    ci.phpmd:
        unless: !ci.phpmd.enabled
        help:   "Runs the phpmd code metrics tool"
        do:     phpmd src xml phpmd.xml --reportfile build/logs/pmd.xml || true

    ci.phpcs:
        unless: !ci.phpcs.enabled
        help:   "Runs the phpcs style checker. It does not fail the build if it yields errors"
        do: |
            phpcs \
                --report=checkstyle \
                --report-file=build/logs/checkstyle.xml \
                --standard=Zicht src > /dev/null \
                || true                                             # makes sure the exit code is 0

    ci.phpcd:
        unless: !ci.phpcd.enabled
        help:   "Runs php copy detector tool"
        do:     phpcd --log-pmd build/logs/pmd-cpd.xml src

    ci.phpdox:
        unless: !ci.phpdox.enabled
        help:   "Runs php copy detector tool"
        do:     phpdox $(ci.phpdox.file ? cat("-f ", ci.phpdox.file))

    ci.phpcb:
        unless: !ci.phpcb.enabled
        help:   "Runs the phpcb code metrics tool"
        do:     phpcb --log build/logs --source src --output build/code-browser

    ci.phpunit:
        unless: !ci.phpunit.enabled
        help:   "Runs the pdepend code metrics tool"
        do:     phpunit $(ci.phpunit.opts ? ci.phpunit.opts)
