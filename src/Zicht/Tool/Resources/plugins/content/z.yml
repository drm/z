# Content options
content:
    # Dirs that contain user content (i.e. uploaded files and such)
    dir:            [ 'web/media' ]

    db:
        structure:  ''
        full:       ''

tasks:
    # Backup remote content into a content archive containing all files from the $(content.dirs) variable
    # and a dump of the database
    content.backup:
        set:
            _backup.file:   content-$(env).$(now).tar.gz
            _backup.cmd:    |
                cd $(env.root);
                mysqldump -Q --opt -d $(env.db)  $(content.db.structure) > db.sql;
                mysqldump -Q --opt $(env.db) $(content.db.full) >> db.sql;
                tar zcvf $(_backup.file) $(content.dir) db.sql;
                rm db.sql
        do:
            - ssh $(env.ssh) "$(_backup.cmd)"
            - rsync --progress $(env.ssh):$(env.root)$(_backup.file) ./$(_backup.file)

        yield: _backup.file

    # Pull a content archive into the local installation
    content.pull:
        set:
            file: $(tasks.content.backup)
        do:
            - @content.load
            - rm $(file)

    # Load a content archive
    content.load:
        set:
            file: ?
        do: |
            cd $(env.local.root);
            tar zxvf $(file);
            mysql $(env.local.db) < db.sql
            rm db.sql
