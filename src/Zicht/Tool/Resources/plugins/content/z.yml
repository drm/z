# Content options
content:
    # Dirs that contain user content (i.e. uploaded files and such)
    dir:            [ 'web/media' ]

    db:
        structure:  ''
        full:       ''

tasks:
    content.backup:
        help: |
            Backup remote content into a content archive.

            The content archive will contain a dump of the configured env.db name,
            and all content files of the remote installation

        set:
            env: ?
            _backup.file: sprintf("content-%s-%s.tar.gz", env, now)
        do:
            - |
                ssh $(env.ssh) "                                                        \
                    cd $(env.root);                                                     \
                    mysqldump -Q --opt -d $(env.db) $(content.db.structure) > db.sql;   \
                    mysqldump -Q --opt $(env.db) $(content.db.full) >> db.sql;          \
                    tar zcvf $(_backup.file) $(content.dir) db.sql;                     \
                    rm db.sql                                                           \
                "
            - rsync --progress $(env.ssh):$(env.root)$(_backup.file) ./$(_backup.file)

        yield: _backup.file

    content.pull:
        help: |
            Pull a content archive from a remote env into the local installation.

        set:
            env:  ?
            file: tasks.content.backup
        do:
            - @content.load
            - rm $(file)

    content.push:
        help: |
            Push a content archive to a remote environment.
            The content archive is typically built by a content:dump or content:backup command:

                z content:backup staging
                z content:push production ./content-staging-*.tar.gz
        unless: !confirm(sprintf("You are pushing content archive <comment>%s</comment> to environment <comment>%s</comment>, are you sure?", file, env))
        set:
            env:  ?
            file: ?
        do:
            - scp $(file) $(env.ssh):$(env.root)/$(file)
            - ssh $(env.ssh) "cd $(env.root); tar zxvf $(file); mysql $(env.db) < ./db.sql; rm $(file); rm db.sql;"

    # Load a content archive
    content.load:
        help: |
            Load a content archive into the local environment.

            The local environment must be specified in your z.yml file as such:

                env:
                    local: {db: "my_db_name", root: .}
        set:
            file: ?
        do: |
            cd $(env.local.root);
            tar zxvf $(file);
            mysql $(env.local.db) < db.sql
            rm db.sql
