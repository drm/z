vcs:
    url:        svn://zon/projecten/ips001
    version:    trunk@HEAD

sync:
    options:    "--opt -rupv"

build:
    dir:        ./build

content:
    dir:        [ 'media' ]

env:
    staging:
        ssh:        ips25_a@a.ips25.com
        root:       ~/public_html/default/public/
        web:        web
        url:        http://a.ips25.com/
        db:         ips25_a

    production:
        ssh:        ips25_p@ips25.com
        root:       ~/public_html/default/public/
        web:        web
        url:        http://ips25.com/
        db:         ips25_p

tasks:
    _export:
        do: svn checkout $(vcs.url)/$(vcs.version) $(build.dir)
        yield: build.dir

    _clean:
        do:
            - rm -rf $(build.dir)
    _sync:
        do:
            - rsync $(sync.options) $(tasks.build) $(env.ssh):$(env.root)

    build:
        pre: [ @_clean, @_export ]
        do:
            - if [ -d "vendor/" ]; then rsync -rp vendor/ $(build.dir)/vendor; fi;
            - if [ -f "$(build.dir)/composer.lock" ]; then cd $(build.dir) && composer install; fi;
            - cd $(build.dir) && make sass;
            - cd $(build.dir) && php app/console assetic:dump --env=$(env) --no-debug;
        yield: build.dir

    deploy:
        pre: [ @_sync ]
        do:
            - ssh $(env.ssh) "cd $(env.root) && php app/console cache:clear --env=$(env) --no-debug"

    ssh:
        do: ssh -t $(env.ssh)

    mysql:
        do: ssh -t $(env.ssh) "mysql $(env.db)"

    content.backup:
        set:
            _backup.file:   $(env).$(now).tar.gz
            _backup.cmd:    |
                cd $(env.root);
                mysqldump -Q --opt $(env.db) > db.sql;
                tar zcvf $(_backup.file) $(content.dir) db.sql;
                rm db.sql
        do:
            - ssh $(env.ssh) "$(_backup.cmd)"
            - rsync --progress $(env.ssh):$(env.root)$(_backup.file) ./$(_backup.file)

        yield: _backup.file